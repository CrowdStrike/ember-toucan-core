name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  CI: true
  dist: ember-toucan-core/dist

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm

  build:
    name: Build Tests
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/assert-build

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [install_dependencies, build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      # To be able to run glint, we need the dist directory
      - uses: ./.github/actions/download-built-package
      - name: Lint
        run: pnpm lint
      - name: Formatting
        run: pnpm format:check

  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [build]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@4.8
          - typescript@4.9

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: ./test-app
      - name: 'Type checking'

        run: |
          pnpm --filter ember-app exec tsc -v;
          pnpm --filter ember-app exec glint --version;
          pnpm --filter ember-app exec glint;





  default_tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter test-app test:ember

  # floating_tests:
  #   name: Floating Deps Test
  #   timeout-minutes: 5
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/pnpm
  #     - name: Install Dependencies (without lockfile)
  #       run: rm pnpm-lock.yaml && pnpm install
  #     - uses: ./.github/actions/download-built-package
  #     - run: pnpm --filter test-app test:ember


  # try_scenarios:
  #   name: ${{ matrix.try-scenario }}
  #   timeout-minutes: 5
  #   runs-on: ubuntu-latest
  #   needs: [default_tests]

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       try-scenario:
  #         - ember-3.28
  #         - ember-4.0.0
  #         - ember-4.4
  #         - ember-release
  #         - ember-beta
  #         - ember-canary
  #         - embroider-safe
  #         - embroider-optimized

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/pnpm
  #     - uses: ./.github/actions/download-built-package
  #     - name: Run Tests
  #       working-directory: ./testing/ember-app
  #       run: >-
  #         node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
  #         --skip-cleanup



#   # https://github.com/changesets/action
#   release:
#     name: Release
#     timeout-minutes: 5
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'
#     needs:
#       - default_tests
#       - floating_tests
#       - typecheck
#       - try_scenarios

#     steps:
#       - uses: actions/checkout@v3
#         with:
#           persist-credentials: false
#       - uses: ./.github/actions/pnpm
#       - uses: ./.github/actions/download-built-package
#       - name: Create Release Pull Request or Publish to npm
#         id: changesets
#         uses: changesets/action@v1
#         with:
#           # This expects you to have a script called release which does a build for your packages and calls changeset publish
#           publish: pnpm release
#           title: "Release Preview"
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

